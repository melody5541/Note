String beanClassName = "com.dynamic.DynamicBean3"; Map<String,Class<?>> classMap = new HashMap<String,Class<?>>(); String filePath = "f:\\testDynamicBean-1.0-SNAPSHOT.jar"; String uFilePath = "file:f:\\testDynamicBean-1.0-SNAPSHOT.jar"; URL url1 = new URL(uFilePath); URLClassLoader urlClassLoader = new URLClassLoader(new URL[] { url1 }, Thread.currentThread() .getContextClassLoader()); List<JarEntry> jarEntryList = new ArrayList<>(); JarFile jarFile = new JarFile(filePath); Enumeration<JarEntry> jarEntryEnumeration = jarFile.entries(); while (jarEntryEnumeration.hasMoreElements()){ JarEntry jarEntry = jarEntryEnumeration.nextElement(); if (//jarEntry.getName().startsWith(filePath) && jarEntry.getName().endsWith(".class")) { jarEntryList.add(jarEntry); } } for (JarEntry entry : jarEntryList) { String className = entry.getName().replace('/', '.'); className = className.substring(0, className.length() - 6); if(!classMap.containsKey(beanClassName)){ Class<?> loadClass = urlClassLoader.loadClass(className); classMap.put(className,loadClass); } } try { Method printMethod = classMap.get(beanClassName).getMethod("printBean3"); printMethod.invoke(classMap.get(beanClassName).newInstance()); } catch (IllegalAccessException e) { e.printStackTrace(); } catch (InvocationTargetException e) { e.printStackTrace(); } catch (NoSuchMethodException e) { e.printStackTrace(); } catch (InstantiationException e) { e.printStackTrace(); } 
